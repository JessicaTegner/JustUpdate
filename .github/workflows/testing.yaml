name: Testing

on:
  push:

defaults:
  run:
    shell: bash
 
jobs:
  tester:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: ~/.venv
      - name: Cache poetry modules
        uses: actions/cache@v2
        env:
          cache-name: cache-poetry-modules
        with:
          path: ~/.venv
          key: ${{ runner.os }}-venv-${{ env.cache-name }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-${{ env.cache-name }}-
            ${{ runner.os }}-venv-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: poetry install
      - name: run tests
        run: poetry run pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
